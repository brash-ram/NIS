CREATE TABLE USERS (
    ID INTEGER NOT NULL, 
	LOGIN VARCHAR(50) NOT NULL, 
	PASSWORD VARCHAR(50) NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    CONSTRAINT STATUS_TYPE CHECK (STATUS IN ('blocked', 'not_blocked')),
    CONSTRAINT USER_PK PRIMARY KEY (ID)
);

CREATE TABLE ROLES (
    USER_ID INTEGER NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    CONSTRAINT ROLE_TYPE CHECK (
		NAME IN ('administrator', 'moderator', 'passenger', 'driver')),
    CONSTRAINT ROLE_PK PRIMARY KEY (USER_ID, NAME),
    CONSTRAINT USER_FK 
        FOREIGN KEY (USER_ID)
        REFERENCES USERS (ID) 
        ON DELETE CASCADE
);

CREATE TABLE MARKS (
    ID INTEGER NOT NULL,
    FROM_USER INTEGER NOT NULL,
    TO_USER INTEGER NOT NULL,
    TRIP_ID INTEGER NOT NULL,
    MARK INTEGER NOT NULL,
    CONSTRAINT MARK_PK PRIMARY KEY (ID),
    CONSTRAINT USER_FK1 
        FOREIGN KEY (FROM_USER)
        REFERENCES USERS (ID) 
        ON DELETE CASCADE,
    CONSTRAINT USER_FK2 
        FOREIGN KEY (TO_USER)
        REFERENCES USERS (ID) 
        ON DELETE CASCADE,
    CONSTRAINT TRIP_FK
        FOREIGN KEY (TRIP_ID)
        REFERENCES TRIP (ID) 
        ON DELETE CASCADE
);

CREATE TABLE SESSIONS (
    ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    ACTIVE_TO TIMESTAMP NOT NULL,
    TOKEN VARCHAR(50) NOT NULL,
    CONSTRAINT SESSION_PK PRIMARY KEY (ID),
    CONSTRAINT USER_FK3 
        FOREIGN KEY (USER_ID)
        REFERENCES USERS (ID) 
        ON DELETE CASCADE
);

CREATE TABLE TRIPS (
    ID INTEGER NOT NULL,
    START_POINT VARCHAR(50) NOT NULL,
    FINAL_POINT VARCHAR(50) NOT NULL,
    TRIP_DATE TIMESTAMP NOT NULL,
    FREE_SEATS INTEGER NOT NULL,
    PRICE FLOAT NOT NULL,
    DRIVER_ID INTEGER NOT NULL,
    CONSTRAINT TRIP_PK PRIMARY KEY (ID),
    CONSTRAINT USER_FK4 
        FOREIGN KEY (DRIVER_ID)
        REFERENCES USERS (ID) 
        ON DELETE CASCADE
);

CREATE TABLE REQUESTS (
    ID INTEGER NOT NULL,
    PASSENGER_ID INTEGER NOT NULL,
    TRIP_ID INTEGER NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    CONSTRAINT REQUEST_PK PRIMARY KEY (ID),
    CONSTRAINT REQUEST_TYPE CHECK (
		STATUS IN ('approved', 'not_approved', 'in_waiting')),
    CONSTRAINT TRIP_FK1 
        FOREIGN KEY (TRIP_ID)
        REFERENCES TRIPS (ID) 
        ON DELETE CASCADE,
    CONSTRAINT USER_FK5 
        FOREIGN KEY (PASSENGER_ID)
        REFERENCES USERS (ID) 
        ON DELETE CASCADE
);



    
